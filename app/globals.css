/* ---------------------------------------------
   0) Font Definitions (Satoshi Full Family)
   --------------------------------------------- */
   @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Light.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-LightItalic.woff2') format('woff2');
    font-weight: 300;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Regular.woff2') format('woff2');
    font-weight: 400;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Italic.woff2') format('woff2');
    font-weight: 400;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Medium.woff2') format('woff2');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-MediumItalic.woff2') format('woff2');
    font-weight: 500;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-BoldItalic.woff2') format('woff2');
    font-weight: 700;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Black.woff2') format('woff2');
    font-weight: 900;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-BlackItalic.woff2') format('woff2');
    font-weight: 900;
    font-style: italic;
    font-display: swap;
  }

  body {
    font-family: 'Satoshi', sans-serif;
  }

/* 1) Import Tailwind */
@import "tailwindcss";


@custom-variant dark (&:is(.dark *));

@layer base {

  @theme {

    --color-black-default: #000;
    --color-black-100: #000319;
    --color-black-200: rgba(17, 25, 40, 0.75);
    --color-black-300: rgba(255, 255, 255, 0.125);

    --color-white-default: #FFF;
    --color-white-100: #BEC1DD;
    --color-white-200: #C1C2D3;

    --color-blue-100: #E4ECFF;
    --color-purple: #CBACF9;

    --color-muted-pink: #f9c5d1;
    --color-muted-green: #a3b18a;
    --color-sand: #fefae0;
    --color-dark-orange: #E76250;
    --color-green-l: #ebf0ec;

    /* Infiity moving cards */
    --animate-scroll: scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite;

    /* Border radius tokens */
    --radius-lg: 0.5rem;
    --radius-md: calc(0.5rem - 2px);
    --radius-sm: calc(0.5rem - 4px);
  }

  body {
    font-family: 'Satoshi', sans-serif;
  }

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }

  @keyframes spotlight {
    0% {
      opacity: 0;
      transform: translate(-72%, -62%) scale(0.5);
    }
    100% {
      opacity: 1;
      transform: translate(-50%, -40%) scale(1);
    }
  }

  @keyframes shimmer {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  @keyframes moveHorizontal {
    0% {
      transform: translateX(-50%) translateY(-10%);
    }
    50% {
      transform: translateX(50%) translateY(10%);
    }
    100% {
      transform: translateX(-50%) translateY(-10%);
    }
  }

  @keyframes moveInCircle {
    0% {
      transform: rotate(0deg);
    }
    50% {
      transform: rotate(180deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes moveVertical {
    0% {
      transform: translateY(-50%);
    }
    50% {
      transform: translateY(50%);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  @keyframes scroll {
    100% {
      transform: translate(calc(-50% - 0.5rem));
    }
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
}

/* ------------------------------------------------
   3) UTILITIES LAYER: Turn those tokens/keyframes 
      into classes like .bg-black-100, .animate-spotlight, etc.
   ------------------------------------------------ */
@layer utilities {
  /* 
    a) Color classes referencing @theme variables:
       If your Tailwind setup supports @theme -> .bg-black-default, etc. 
       you'll get them automatically. If not, define them manually:
  */
  .bg-black-default {
    background-color: var(--color-black-default);
  }
  .text-black-default {
    color: var(--color-black-default);
  }
  .bg-black-100 {
    background-color: var(--color-black-100);
  }
  /* ... and so on for each color you want a direct class for ... */

  .bg-purple {
    background-color: var(--color-purple);
  }

  .text-purple {
    color: var(--color-purple);
  }

  /* 
    b) Animation classes
    e.g. .animate-spotlight => uses keyframes "spotlight"
  */
  .animate-accordion-down {
    animation: accordion-down 0.2s ease-out;
  }
  .animate-accordion-up {
    animation: accordion-up 0.2s ease-out;
  }
  .animate-spotlight {
    animation: spotlight 2s ease 0.75s 1 forwards;
  }
  .animate-shimmer {
    animation: shimmer 2s linear infinite;
  }
  .animate-first {
    animation: moveVertical 30s ease infinite;
  }
  .animate-second {
    animation: moveInCircle 20s reverse infinite;
  }
  .animate-third {
    animation: moveInCircle 40s linear infinite;
  }
  .animate-fourth {
    animation: moveHorizontal 40s ease infinite;
  }
  .animate-fifth {
    animation: moveInCircle 20s ease infinite;
  }
  .animate-scroll {
    animation: scroll var(--animation-duration, 40s)
      var(--animation-direction, forwards) linear infinite;
  }

  /*
    c) Border radius classes
  */
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .grainy {
    background-image: url('/images/binding-dark.png'); /* or noise.svg/png */
    background-repeat: repeat;
    background-size: cover;
    mix-blend-mode: overlay;
    opacity: 0.2;
    pointer-events: none;
  }

  /*
    d) Container or any other custom classes from your old config
    .container {
      margin-left: auto;
      margin-right: auto;
      padding-left: 2rem;
      padding-right: 2rem;
      max-width: 100%;
    }
    @screen 2xl {
      .container {
        max-width: 1400px;
      }
    }
    ...
  */

  .bg-grid {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20fill='none'%20stroke='%23ccc'%3E%3Cpath%20d='M0%20.5H31.5V32'/%3E%3C/svg%3E");
  }
  .bg-grid-small {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20width='8'%20height='8'%20fill='none'%20stroke='%23ccc'%3E%3Cpath%20d='M0%20.5H31.5V32'/%3E%3C/svg%3E");
  }
  .bg-dot {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20width='16'%20height='16'%20fill='none'%3E%3Ccircle%20fill='%23ccc'%20cx='10'%20cy='10'%20r='1.6257'/%3E%3C/svg%3E");
  }

}

/* ------------------------------------------------
   4) (Optional) Dark mode with “prefers-color-scheme”
      Or use the .dark class approach, etc.
   ------------------------------------------------ */
@media (prefers-color-scheme: dark) {
  @layer base {
    @theme {
      /* you can redefine your color tokens for dark mode here if you wish */
      --color-black-default: #000;
      --color-black-100: #000319;
      --color-black-200: rgba(17,25,40,0.75);
      --color-black-300: rgba(255,255,255,0.125);
      --color-purple: #CBACF9;
      /* etc. */
    }
  }
}

@theme inline {
    --radius-sm: calc(var(--radius) - 4px);
    --radius-md: calc(var(--radius) - 2px);
    --radius-lg: var(--radius);
    --radius-xl: calc(var(--radius) + 4px);
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --color-card: var(--card);
    --color-card-foreground: var(--card-foreground);
    --color-popover: var(--popover);
    --color-popover-foreground: var(--popover-foreground);
    --color-primary: var(--primary);
    --color-primary-foreground: var(--primary-foreground);
    --color-secondary: var(--secondary);
    --color-secondary-foreground: var(--secondary-foreground);
    --color-muted: var(--muted);
    --color-muted-foreground: var(--muted-foreground);
    --color-accent: var(--accent);
    --color-accent-foreground: var(--accent-foreground);
    --color-destructive: var(--destructive);
    --color-border: var(--border);
    --color-input: var(--input);
    --color-ring: var(--ring);
    --color-chart-1: var(--chart-1);
    --color-chart-2: var(--chart-2);
    --color-chart-3: var(--chart-3);
    --color-chart-4: var(--chart-4);
    --color-chart-5: var(--chart-5);
    --color-sidebar: var(--sidebar);
    --color-sidebar-foreground: var(--sidebar-foreground);
    --color-sidebar-primary: var(--sidebar-primary);
    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
    --color-sidebar-accent: var(--sidebar-accent);
    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
    --color-sidebar-border: var(--sidebar-border);
    --color-sidebar-ring: var(--sidebar-ring);
}

:root {
    --radius: 0.625rem;
    --background: oklch(1 0 0);
    --foreground: oklch(0.145 0 0);
    --card: oklch(1 0 0);
    --card-foreground: oklch(0.145 0 0);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(0.145 0 0);
    --primary: oklch(0.205 0 0);
    --primary-foreground: oklch(0.985 0 0);
    --secondary: oklch(0.97 0 0);
    --secondary-foreground: oklch(0.205 0 0);
    --muted: oklch(0.97 0 0);
    --muted-foreground: oklch(0.556 0 0);
    --accent: oklch(0.97 0 0);
    --accent-foreground: oklch(0.205 0 0);
    --destructive: oklch(0.577 0.245 27.325);
    --border: oklch(0.922 0 0);
    --input: oklch(0.922 0 0);
    --ring: oklch(0.708 0 0);
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --sidebar: oklch(0.985 0 0);
    --sidebar-foreground: oklch(0.145 0 0);
    --sidebar-primary: oklch(0.205 0 0);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.97 0 0);
    --sidebar-accent-foreground: oklch(0.205 0 0);
    --sidebar-border: oklch(0.922 0 0);
    --sidebar-ring: oklch(0.708 0 0);
}

.dark {
    --background: oklch(0.145 0 0);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.205 0 0);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.205 0 0);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.922 0 0);
    --primary-foreground: oklch(0.205 0 0);
    --secondary: oklch(0.269 0 0);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.269 0 0);
    --muted-foreground: oklch(0.708 0 0);
    --accent: oklch(0.269 0 0);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.704 0.191 22.216);
    --border: oklch(1 0 0 / 10%);
    --input: oklch(1 0 0 / 15%);
    --ring: oklch(0.556 0 0);
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.205 0 0);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.488 0.243 264.376);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.269 0 0);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(1 0 0 / 10%);
    --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
    }
  body {
    @apply bg-background text-foreground;
    }
}
